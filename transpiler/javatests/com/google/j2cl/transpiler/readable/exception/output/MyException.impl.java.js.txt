goog.module('com.google.j2cl.transpiler.readable.exception.MyException$impl');

const Exception = goog.require('java.lang.Exception$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Throwable = goog.forwardDeclare('java.lang.Throwable$impl');

class MyException extends Exception {
  /**
   * @protected
   */
  constructor() {
    super();
  }
  /**
   * Factory method corresponding to constructor 'MyException()'.
   * @return {!MyException}
   * @public
   */
  static $create__() {
    MyException.$clinit();
    let $instance = new MyException();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_exception_MyException__();
    $instance.m_privateInitError__java_lang_Object_$pp_java_lang(
        new Error($instance));
    return $instance;
  }
  /**
   * Initialization from constructor 'MyException()'.
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_exception_MyException__() {
    this.$ctor__java_lang_Exception__();
  }
  /**
   * Factory method corresponding to constructor 'MyException(Throwable)'.
   * @param {Throwable} cause
   * @return {!MyException}
   * @public
   */
  static $create__java_lang_Throwable(cause) {
    MyException.$clinit();
    let $instance = new MyException();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_exception_MyException__java_lang_Throwable(
            cause);
    $instance.m_privateInitError__java_lang_Object_$pp_java_lang(
        new Error($instance));
    return $instance;
  }
  /**
   * Initialization from constructor 'MyException(Throwable)'.
   * @param {Throwable} cause
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_exception_MyException__java_lang_Throwable(
      cause) {
    this.$ctor__java_lang_Exception__java_lang_Throwable(cause);
  }
  /**
   * @public
   */
  static $clinit() {
    MyException.$clinit = () => {};
    MyException.$loadModules();
    Exception.$clinit();
  }
  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof MyException;
  }
  /**
   * @public
   */
  static $loadModules() {}
}
$Util.$setClassMetadata(
    MyException, 'com.google.j2cl.transpiler.readable.exception.MyException');

exports = MyException;
//# sourceMappingURL=MyException.js.map